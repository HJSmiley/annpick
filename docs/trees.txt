/annpick
├── /frontend                      # 프론트엔드 관련 파일들을 모두 포함하는 폴더
│   ├── /public
│   │   ├── index.html             # React 애플리케이션의 진입점이 되는 HTML 파일
│   │   └── favicon.ico            # 브라우저 탭에 표시될 파비콘 이미지 파일
│   ├── /src
│   │   ├── /assets
│   │   │   ├── /images
│   │   │   │   ├── logo.png       # 애플리케이션에서 사용하는 이미지 파일
│   │   │   │   └── ...            # 기타 이미지 파일
│   │   │   ├── /icons
│   │   │   │   ├── search.svg     # 애플리케이션에서 사용하는 아이콘 파일
│   │   │   │   └── ...            # 기타 아이콘 파일
│   │   ├── /components
│   │   │   ├── /common            # 공통 컴포넌트 폴더
│   │   │   │   ├── Button.tsx     # 공통 버튼 컴포넌트
│   │   │   │   ├── Modal.tsx      # 공통 모달 컴포넌트
│   │   │   │   └── Spinner.tsx    # 로딩 스피너 컴포넌트
│   │   │   ├── /auth              # 인증 관련 컴포넌트 폴더
│   │   │   │   ├── LoginModal.tsx # 로그인 모달 컴포넌트
│   │   │   │   ├── SocialLoginButton.tsx # 소셜 로그인 버튼 컴포넌트
│   │   │   │   └── LogoutButton.tsx # 로그아웃 버튼 컴포넌트
│   │   │   ├── /layout            # 레이아웃 관련 컴포넌트 폴더
│   │   │   │   ├── Header.tsx     # 헤더 컴포넌트
│   │   │   │   ├── Footer.tsx     # 푸터 컴포넌트
│   │   │   │   └── GNB.tsx        # GNB(Gloabl Navigation Bar)에서 로그인 상태에 따른 UI 변경
│   │   │   ├── /search            # 검색 관련 컴포넌트 폴더
│   │   │   │   ├── SearchBar.tsx  # 검색 바 컴포넌트
│   │   │   │   └── SearchResults.tsx # 검색 결과 표시 컴포넌트
│   │   │   ├── /anime             # 애니메이션 관련 컴포넌트 폴더
│   │   │   │   ├── RatedAnimeFilter.tsx # 평가한 작품 필터링 컴포넌트
│   │   │   │   ├── RecommendationList.tsx # 추천 작품 목록 컴포넌트
│   │   │   │   ├── NewRecommendationButton.tsx # "새로 추천" 버튼 컴포넌트
│   │   │   │   ├── AnimeCard.tsx  # 애니메이션 카드 컴포넌트
│   │   │   │   ├── AnimeList.tsx  # 애니메이션 리스트 컴포넌트
│   │   │   │   ├── InfiniteScroll.tsx # 무한 스크롤 컴포넌트
│   │   │   │   └── AnimeDetail.tsx # 애니메이션 상세 정보 컴포넌트
│   │   │   ├── /review            # 리뷰 관련 컴포넌트 폴더
│   │   │   │   ├── ReviewCard.tsx # 리뷰 카드 컴포넌트
│   │   │   │   ├── ReviewList.tsx # 리뷰 리스트 컴포넌트
│   │   │   │   └── RatingSlider.tsx # 별점 슬라이더 컴포넌트
│   │   │   └── /mypage            # 마이페이지 관련 컴포넌트 폴더
│   │   │       ├── UserInfo.tsx   # 회원 정보 컴포넌트
│   │   │       └── ...            # 기타 마이페이지 컴포넌트
│   │   ├── /pages                 # 각 라우트에 대응되는 페이지 컴포넌트 폴더
│   │   │   ├── Home.tsx           # 메인 페이지 컴포넌트
│   │   │   ├── AnimeDetailPage.tsx # 애니메이션 상세 정보 페이지 컴포넌트
│   │   │   ├── MyPage.tsx         # 마이페이지 컴포넌트 (평가한 작품 페이지 정보 포함)
│   │   │   └── Recommendation.tsx # 추천 페이지 컴포넌트
│   │   ├── /context               # 전역 상태 관리에 사용되는 Context API 모음
│   │   │   ├── AuthContext.tsx    # 사용자 인증 상태를 관리하는 Context
│   │   │   ├── AnimeContext.tsx   # 애니메이션 데이터 관리를 위한 Context
│   │   │   ├── PreferenceContext.tsx # 선호작 관련 상태를 관리하는 Context
│   │   │   ├── RecommendationContext.tsx # 추천 관련 상태를 관리하는 Context
│   │   │   └── SearchContext.tsx  # 검색 상태를 관리하는 Context
│   │   ├── /hooks                 # UI 상태 관리를 위한 커스텀 훅 모음
│   │   │   ├── useAuthStatus.ts   # 사용자의 로그인 상태를 관리하는 훅
│   │   │   ├── useInfiniteScroll.ts # 무한 스크롤 로직을 관리하는 훅
│   │   │   ├── useRating.ts       # 별점 평가 로직을 관리하는 훅
│   │   │   └── usePreferenceFilter.ts # 선호/비선호 필터링 로직을 관리하는 훅
│   │   ├── /services              # 비즈니스 로직 및 API 호출을 관리하는 서비스 레이어
│   │   │   ├── /api               # API 요청을 관리하는 폴더
│   │   │   │   ├── authApi.ts     # 인증 관련 API 호출 함수 모듈
│   │   │   │   ├── animeApi.ts    # 애니메이션 관련 API 호출 함수 모듈
│   │   │   │   ├── preferenceApi.ts # 선호작 관련 API 호출 함수 모듈
│   │   │   │   ├── recommendationApi.ts # 추천 관련 API 호출 함수 모듈
│   │   │   │   ├── reviewApi.ts   # 리뷰 관련 API 호출 함수 모듈
│   │   │   │   └── userApi.ts     # 사용자 정보 관련 API 호출 함수 모듈
│   │   │   └── /hooks             # 비즈니스 로직과 밀접하게 연관된 커스텀 훅 모음
│   │   │       ├── useAnimeDetails.ts # 애니메이션 상세 정보 로직을 관리하는 훅
│   │   │       ├── usePreference.ts # 선호작품 관리를 위한 훅
│   │   │       ├── useRecommendation.ts # 추천작품 관리를 위한 훅
│   │   │       ├── useSearch.ts   # 검색 결과 관리를 위한 훅
│   │   │       └── useUserInfo.ts # 사용자 정보 로직을 관리하는 훅
│   │   ├── /styles                # 전역 스타일 및 Tailwind CSS 관련 파일 모음
│   │   │   ├── global.css         # 글로벌 스타일 정의 파일
│   │   │   └── tailwind.css       # Tailwind CSS 커스텀 설정 파일
│   │   └── /types                 # TypeScript 타입 정의 파일 모음
│   │       ├── index.d.ts         # 글로벌 타입 정의 파일
│   │       ├── anime.d.ts         # 애니메이션 관련 타입 정의 파일
│   │       ├── auth.d.ts          # 인증 관련 타입 정의 파일
│   │       ├── preference.d.ts    # 선호작 관련 타입 정의 파일
│   │       ├── recommendation.d.ts # 추천 관련 타입 정의 파일
│   │       └── review.d.ts        # 리뷰 관련 타입 정의 파일
│   ├── tailwind.config.js         # Tailwind CSS 설정 파일 (frontend 폴더에 위치)
│   ├── App.tsx                    # 메인 App 컴포넌트, 라우팅 및 글로벌 설정을 담당
│   └── index.tsx                  # React 엔트리 포인트, ReactDOM.render를 호출
│
├── /backend                       # 백엔드 관련 파일들을 모두 포함하는 폴더
│   ├── /src
│   │   ├── /config                # 설정 파일들을 모아둔 폴더
│   │   │   ├── dbConfig.js        # 데이터베이스 연결 설정
│   │   │   ├── authConfig.js      # 인증 관련 설정 (소셜 로그인 등)
│   │   │   ├── jwtConfig.js       # JWT 설정 파일
│   │   │   ├── awsConfig.js       # AWS 관련 설정
│   │   │   └── graphqlConfig.js   # GraphQL 클라이언트 설정 파일 (외부 API 서버 URL 등)
│   │   ├── /controllers           # 각 기능별로 API 요청을 처리하는 컨트롤러 모음
│   │   │   ├── authController.js  # 인증 관련 요청 처리
│   │   │   ├── animeController.js # 애니메이션 관련 요청 처리
│   │   │   ├── preferenceController.js # 선호작 관련 요청 처리
│   │   │   ├── recommendationController.js # 추천 관련 요청 처리
│   │   │   ├── reviewController.js # 리뷰 관련 요청 처리
│   │   │   ├── searchController.js # 검색 관련 요청 처리
│   │   │   └── userController.js  # 사용자 정보 관련 요청 처리
│   │   ├── /graphql               # GraphQL 클라이언트 관련 파일을 모아둔 폴더
│   │   │   ├── queries            # GraphQL 쿼리와 뮤테이션을 정의한 파일들
│   │   │   │   ├── getAnimeQuery.js # 애니메이션 데이터를 가져오는 GraphQL 쿼리
│   │   │   │   └── ...            # 기타 쿼리와 뮤테이션
│   │   │   ├── graphqlClient.js   # GraphQL 클라이언트 설정 및 초기화 파일
│   │   │   └── index.js           # GraphQL 관련 로직을 관리하는 엔트리 파일
│   │   ├── /models                # Sequelize ORM을 사용하여 데이터베이스 모델을 정의하는 파일 모음
│   │   │   ├── index.js           # 모든 모델을 한 곳에서 모아 내보냄
│   │   │   ├── User.js            # 사용자 모델 정의
│   │   │   ├── Anime.js           # 애니메이션 모델 정의
│   │   │   ├── Tag.js             # 태그 모델 정의
│   │   │   ├── AniTag.js          # 애니메이션-태그 관계를 정의하는 모델
│   │   │   ├── Preference.js      # 선호작 모델 정의
│   │   │   ├── Review.js          # 리뷰 모델 정의
│   │   │   └── Recommendation.js  # 추천 모델 정의
│   │   ├── /routes                # API 엔드포인트를 정의하는 파일 모음
│   │   │   ├── authRoutes.js      # 인증 관련 라우트 정의
│   │   │   ├── animeRoutes.js     # 애니메이션 관련 라우트 정의
│   │   │   ├── preferenceRoutes.js # 선호작 관련 라우트 정의
│   │   │   ├── recommendationRoutes.js # 추천 관련 라우트 정의
│   │   │   ├── reviewRoutes.js    # 리뷰 관련 라우트 정의
│   │   │   ├── searchRoutes.js    # 검색 관련 라우트 정의
│   │   │   └── userRoutes.js      # 사용자 정보 관련 라우트 정의
│   │   ├── /services              # 비즈니스 로직을 처리하는 서비스 레이어
│   │   │   ├── authService.js     # 인증 관련 비즈니스 로직 처리
│   │   │   ├── animeService.js    # 애니메이션 관련 비즈니스 로직 처리
│   │   │   ├── preferenceService.js # 선호작 관련 비즈니스 로직 처리
│   │   │   ├── recommendationService.js # 추천 관련 비즈니스 로직 처리
│   │   │   ├── reviewService.js   # 리뷰 관련 비즈니스 로직 처리
│   │   │   ├── searchService.js   # 검색 관련 비즈니스 로직 처리
│   │   │   └── userService.js     # 사용자 정보 관련 비즈니스 로직 처리
│   │   ├── /middleware            # 미들웨어 파일들을 모아둔 폴더
│   │   │   ├── authMiddleware.js  # 인증 미들웨어
│   │   │   ├── errorMiddleware.js # 에러 처리 미들웨어
│   │   │   ├── logsMiddleware.js  # 로그를 기록하는 미들웨어
│   │   │   └── ...                # 기타 미들웨어 파일들
│   │   ├── /utils                 # 유틸리티 함수들을 모아둔 폴더
│   │   │   ├── errorHandler.js    # 에러 핸들링 유틸리티
│   │   │   └── logger.js          # 로깅 유틸리티
│   │   ├── app.js                 # Express 애플리케이션 설정 및 미들웨어 로드
│   │   └── server.js              # 서버 시작 파일
│
├── /scripts                       # 배포 및 유지보수를 위한 스크립트들
│   └── (필요한 스크립트들만 포함) # 예: DB 마이그레이션 스크립트, 배포 스크립트 등
│
├── /logs
│   ├── app.log                    # 일반 애플리케이션 로그
│   ├── error.log                  # 에러 관련 로그
│   ├── access.log                 # 서버 접근 로그 (예: HTTP 요청/응답 기록)
│   └── ...                        # 기타 로그 파일들
│
├── /docs                          # 프로젝트에 대한 문서화 폴더
│   ├── api.md                     # API 명세서
│   ├── architecture.md            # 시스템 아키텍처 설명
│   ├── setup.md                   # 프로젝트 설정 및 설치 방법
│   ├── deployment.md              # 배포 가이드
│   └── troubleshooting.md         # 문제 해결 가이드
│
├── README.md                      # 프로젝트 개요 및 설치 방법 등의 기본 문서
├── package.json                   # 프로젝트 종속성 및 스크립트 정의
├── .env                           # 환경 변수 설정 파일
├── .gitignore                     # Git이 추적하지 않아도 되는 정보 설정
└── ...                            # 기타 설정 및 구성 파일들